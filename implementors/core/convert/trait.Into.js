(function() {var implementors = {};
implementors["either"] = [{"text":"impl&lt;L, R&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.62.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.62.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, L&gt;&gt; for <a class=\"enum\" href=\"either/enum.Either.html\" title=\"enum either::Either\">Either</a>&lt;L, R&gt;","synthetic":false,"types":["either::Either"]}];
implementors["hyper"] = [{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.62.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"struct\" href=\"hyper/body/struct.Bytes.html\" title=\"struct hyper::body::Bytes\">Bytes</a>&gt; for <a class=\"struct\" href=\"hyper/ext/struct.ReasonPhrase.html\" title=\"struct hyper::ext::ReasonPhrase\">ReasonPhrase</a>","synthetic":false,"types":["hyper::ext::h1_reason_phrase::ReasonPhrase"]}];
implementors["itertools"] = [{"text":"impl&lt;A, B&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.62.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.62.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"itertools/enum.Either.html\" title=\"enum itertools::Either\">Either</a>&lt;A, B&gt;&gt;&gt; for <a class=\"enum\" href=\"itertools/enum.EitherOrBoth.html\" title=\"enum itertools::EitherOrBoth\">EitherOrBoth</a>&lt;A, B&gt;","synthetic":false,"types":["itertools::either_or_both::EitherOrBoth"]}];
implementors["jwt"] = [{"text":"impl&lt;H, C&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.62.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.62.0/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a>&gt; for <a class=\"struct\" href=\"jwt/struct.Token.html\" title=\"struct jwt::Token\">Token</a>&lt;H, C, <a class=\"struct\" href=\"jwt/token/struct.Signed.html\" title=\"struct jwt::token::Signed\">Signed</a>&gt;","synthetic":false,"types":["jwt::Token"]},{"text":"impl&lt;H, C, S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.62.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.62.0/std/primitive.tuple.html\">(</a>H, C<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.62.0/std/primitive.tuple.html\">)</a>&gt; for <a class=\"struct\" href=\"jwt/struct.Token.html\" title=\"struct jwt::Token\">Token</a>&lt;H, C, S&gt;","synthetic":false,"types":["jwt::Token"]}];
implementors["oauth2"] = [{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.62.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.62.0/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a>&gt; for <a class=\"struct\" href=\"oauth2/struct.ClientId.html\" title=\"struct oauth2::ClientId\">ClientId</a>","synthetic":false,"types":["oauth2::types::ClientId"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.62.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.62.0/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a>&gt; for <a class=\"struct\" href=\"oauth2/struct.ResponseType.html\" title=\"struct oauth2::ResponseType\">ResponseType</a>","synthetic":false,"types":["oauth2::types::ResponseType"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.62.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.62.0/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a>&gt; for <a class=\"struct\" href=\"oauth2/struct.ResourceOwnerUsername.html\" title=\"struct oauth2::ResourceOwnerUsername\">ResourceOwnerUsername</a>","synthetic":false,"types":["oauth2::types::ResourceOwnerUsername"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.62.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.62.0/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a>&gt; for <a class=\"struct\" href=\"oauth2/struct.Scope.html\" title=\"struct oauth2::Scope\">Scope</a>","synthetic":false,"types":["oauth2::types::Scope"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.62.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.62.0/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a>&gt; for <a class=\"struct\" href=\"oauth2/struct.PkceCodeChallengeMethod.html\" title=\"struct oauth2::PkceCodeChallengeMethod\">PkceCodeChallengeMethod</a>","synthetic":false,"types":["oauth2::types::PkceCodeChallengeMethod"]}];
implementors["oid"] = [{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.62.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.62.0/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a>&gt; for &amp;<a class=\"struct\" href=\"oid/struct.ObjectIdentifier.html\" title=\"struct oid::ObjectIdentifier\">ObjectIdentifier</a>","synthetic":false,"types":["oid::ObjectIdentifier"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.62.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.62.0/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a>&gt; for <a class=\"struct\" href=\"oid/struct.ObjectIdentifier.html\" title=\"struct oid::ObjectIdentifier\">ObjectIdentifier</a>","synthetic":false,"types":["oid::ObjectIdentifier"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.62.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.62.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.62.0/std/primitive.u8.html\">u8</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.62.0/alloc/alloc/struct.Global.html\" title=\"struct alloc::alloc::Global\">Global</a>&gt;&gt; for &amp;<a class=\"struct\" href=\"oid/struct.ObjectIdentifier.html\" title=\"struct oid::ObjectIdentifier\">ObjectIdentifier</a>","synthetic":false,"types":["oid::ObjectIdentifier"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.62.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.62.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.62.0/std/primitive.u8.html\">u8</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.62.0/alloc/alloc/struct.Global.html\" title=\"struct alloc::alloc::Global\">Global</a>&gt;&gt; for <a class=\"struct\" href=\"oid/struct.ObjectIdentifier.html\" title=\"struct oid::ObjectIdentifier\">ObjectIdentifier</a>","synthetic":false,"types":["oid::ObjectIdentifier"]}];
implementors["unicase"] = [{"text":"impl&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.62.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;&amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.62.0/core/primitive.str.html\">str</a>&gt; for <a class=\"struct\" href=\"unicase/struct.UniCase.html\" title=\"struct unicase::UniCase\">UniCase</a>&lt;&amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.62.0/core/primitive.str.html\">str</a>&gt;","synthetic":false,"types":["unicase::UniCase"]},{"text":"impl&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.62.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.62.0/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a>&gt; for <a class=\"struct\" href=\"unicase/struct.UniCase.html\" title=\"struct unicase::UniCase\">UniCase</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.62.0/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a>&gt;","synthetic":false,"types":["unicase::UniCase"]},{"text":"impl&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.62.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.62.0/alloc/borrow/enum.Cow.html\" title=\"enum alloc::borrow::Cow\">Cow</a>&lt;'a, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.62.0/core/primitive.str.html\">str</a>&gt;&gt; for <a class=\"struct\" href=\"unicase/struct.UniCase.html\" title=\"struct unicase::UniCase\">UniCase</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.62.0/alloc/borrow/enum.Cow.html\" title=\"enum alloc::borrow::Cow\">Cow</a>&lt;'a, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.62.0/core/primitive.str.html\">str</a>&gt;&gt;","synthetic":false,"types":["unicase::UniCase"]}];
implementors["unicode_bidi"] = [{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.62.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.62.0/std/primitive.u8.html\">u8</a>&gt; for <a class=\"struct\" href=\"unicode_bidi/level/struct.Level.html\" title=\"struct unicode_bidi::level::Level\">Level</a>","synthetic":false,"types":["unicode_bidi::level::Level"]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()